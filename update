#!/bin/bash

###############################################################################################
##                                                                                           ##
##                       Universidad Carlos III de Madrid (UC3M)                             ##
##                                                                                           ##
##    Lightning - The simple and lightweight network simulator based on Docker containers    ##
##                                                                                           ##
##    author:         Pablo Toribio (under supervision of professor C.J. Bernardos Cano)     ##
##                                                                                           ##
##    project site:   https://github.com/ptoribi/lightning                                   ##
##                                                                                           ##
##    file description:  updater of the program                                              ##
##                                                                                           ##
##    usage:             not to be used directly, but summoned by "lightning" file           ##
##                                                                                           ##
###############################################################################################


LIGHTNING_INSTALLATION_PATH=$(dirname $(readlink -f $(which lightning)))
source $LIGHTNING_INSTALLATION_PATH/variables.conf

# ptoribi: update the Docker images from DockerHub
#docker pull $DOCKER_IMAGE_host
#docker pull $DOCKER_IMAGE_router

# ptoribi: prepare a folder in /tmp for saving files contained in scenarios-local
rm -rf /tmp/scenarios-local-tmp
mkdir /tmp/scenarios-local-tmp
# ptoribi: if scenarios-local is populated, save those files
if [[ $(ls -l $LIGHTNING_INSTALLATION_PATH/scenarios-local | awk 'NR>1' | wc -l) -gt 0 ]]; then
  cp -r $LIGHTNING_INSTALLATION_PATH/scenarios-local/* /tmp/scenarios-local-tmp
fi

# ptoribi: save the file personalized_functions
cp $LIGHTNING_INSTALLATION_PATH/personalized_functions /tmp/personalized_functions-tmp

# ptoribi: save the security folder
cp -r $LIGHTNING_INSTALLATION_PATH/security /tmp/security-tmp

# ptoribi: prepare a folder in /tmp for storing GitHub temp files
rm -rf /tmp/lightning-tmp
mkdir /tmp/lightning-tmp

# ptoribi: the last version of Lightning will be downloaded from GitHub
git clone --depth=1 $GIT_REPO /tmp/lightning-tmp

if [ $? == 0 ]
then

  # ptoribi: the following lines will set the old values of the variables in the new configuration file
  STRING_SHARED_FOLDER_LOCATION=$(grep "SHARED_FOLDER_LOCATION=" $LIGHTNING_INSTALLATION_PATH/variables.conf)
  if [[ ${#STRING_SHARED_FOLDER_LOCATION} -ne 0 ]]
  then
    sed -i -e "s@SHARED_FOLDER_LOCATION.*@$STRING_SHARED_FOLDER_LOCATION@" /tmp/lightning-tmp/variables.conf
    #echo $STRING_SHARED_FOLDER_LOCATION
  fi
  
  STRING_SHARED_FOLDER_NAME=$(grep "SHARED_FOLDER_NAME=" $LIGHTNING_INSTALLATION_PATH/variables.conf)
  if [[ ${#STRING_SHARED_FOLDER_NAME} -ne 0 ]]
  then
    sed -i -e "s@SHARED_FOLDER_NAME.*@$STRING_SHARED_FOLDER_NAME@" /tmp/lightning-tmp/variables.conf
    #echo $STRING_SHARED_FOLDER_NAME
  fi

  STRING_DOCKER_IMAGE_host=$(grep "DOCKER_IMAGE_host=" $LIGHTNING_INSTALLATION_PATH/variables.conf)
  if [[ ${#STRING_DOCKER_IMAGE_host} -ne 0 ]]
  then
    sed -i "s@DOCKER_IMAGE_host=.*@$STRING_DOCKER_IMAGE_host@" /tmp/lightning-tmp/variables.conf
    #echo $STRING_DOCKER_IMAGE_host
  fi

  STRING_DOCKER_IMAGE_router=$(grep "DOCKER_IMAGE_router=" $LIGHTNING_INSTALLATION_PATH/variables.conf)
  if [[ ${#STRING_DOCKER_IMAGE_router} -ne 0 ]]
  then
    sed -i "s@DOCKER_IMAGE_router=.*@$STRING_DOCKER_IMAGE_router@" /tmp/lightning-tmp/variables.conf
    #echo $STRING_DOCKER_IMAGE_router
  fi

  STRING_GITHUB=$(grep "GIT_REPO=" $LIGHTNING_INSTALLATION_PATH/variables.conf)
  if [[ ${#STRING_GIT_REPO} -ne 0 ]]
  then
    sed -i "s@GIT_REPO=.*@$STRING_GIT_REPO@" /tmp/lightning-tmp/variables.conf
    #echo $STRING_GIT_REPO
  fi

  STRING_GIT_REPO_SCENARIOS=$(grep "GIT_REPO_SCENARIOS=" $LIGHTNING_INSTALLATION_PATH/variables.conf)
  if [[ ${#STRING_GIT_REPO_SCENARIOS} -ne 0 ]]
  then
    sed -i "s@GIT_REPO_SCENARIOS=.*@$STRING_GIT_REPO_SCENARIOS@" /tmp/lightning-tmp/variables.conf
    #echo $STRING_GIT_REPO_SCENARIOS
  fi

  # ptoribi: the version currently installed in the system will be uninstalled
  $LIGHTNING_INSTALLATION_PATH/uninstall

  # ptoribi: the new version will be installed
  /tmp/lightning-tmp/install

  # ptoribi: restore scenarios-local
  if [[ $(ls -l /tmp/scenarios-local-tmp | awk 'NR>1' | wc -l) -gt 0 ]]; then
    cp -r /tmp/scenarios-local-tmp/* $LIGHTNING_INSTALLATION_PATH/scenarios-local
  fi

  # ptoribi: restore personalized_functions
  cp /tmp/personalized_functions-tmp $LIGHTNING_INSTALLATION_PATH/personalized_functions

  # ptoribi: restore security folder
  cp -r /tmp/security-tmp/* $LIGHTNING_INSTALLATION_PATH/security

else
  echo $(tput setaf 0)$(tput setab 1) "Error while getting lightning from GitHub, are you connected to the internet?" $(tput sgr 0)
fi
